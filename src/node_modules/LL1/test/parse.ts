
import * as assert from 'assert';
import * as utility from 'utility';
import {createLL1Parser} from '../index';
import LL1Parser from '../parser';
import * as p from 'parse';


describe('LL(1) parse', function () {
    it('simple 1', function () {
        let ll1parser = createLL1Parser([
            'E -> T X',
            'X -> + E | ',
            'T -> int Y | ( E )',
            'Y -> | * T'
        ]);
        let parseret = ll1parser.parse([
            { rawstr: '1', symnum: ll1parser.getSymNum('int') },
            { rawstr: '+', symnum: ll1parser.getSymNum('+') },
            { rawstr: '2', symnum: ll1parser.getSymNum('int') },
            { rawstr: '*', symnum: ll1parser.getSymNum('*') },
            { rawstr: '3', symnum: ll1parser.getSymNum('int') },
        ]);
        assert.equal(true, parseret.accept);
        console.info(parseret.root);
    });
});
