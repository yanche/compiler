
var utility = require('utility');

var State = function (idGen, start, terminal) {
    this._id = idGen.newId();
    this._tmap = new Map(); //transition map
    this._terminal = Boolean(terminal); //is terminal state
    this._start = Boolean(start); //is start state
};
State.prototype.transition = function (ch, state) {
    if (state == null)
        throw new Error('null state is not acceptable');
    if (!utility.isStr(ch) || ch.length > 1) //empty string is epsilon transition
        throw new Error('bad transition character: ' + ch);
    if (this._tmap.has(ch))
        this._tmap.get(ch).add(state);
    else
        this._tmap.set(ch, new Set().add(state));
};
//return a set of State
State.prototype.getTransition = function (ch) {
    return this._tmap.get(ch);
};
State.prototype.getAllTransitionChars = function () {
    return [...this._tmap].map(function (t) { return t[0]; });
};
State.prototype.setTerminal = function (t) {
    this._terminal = Boolean(t);
    return this;
};
State.prototype.getTerminal = function () {
    return this._terminal;
};
State.prototype.setStart = function (t) {
    this._start = Boolean(t);
    return this;
};
State.prototype.getStart = function () {
    return this._start;
};
State.prototype.getId = function () {
    return this._id;
};

module.exports = State;
