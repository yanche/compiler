"use strict";
function isNonNeg(num, int) {
    return num >= 0 && (!int || Math.ceil(num) === num);
}
exports.isNonNeg = isNonNeg;
class IdGen {
    constructor(init) {
        this._cur = init == null ? 0 : init;
    }
    next() {
        return this._cur++;
    }
}
exports.IdGen = IdGen;
const closure = require('./closure');
exports.closure = closure;
const automata = require('./automata');
exports.automata = automata;
function strictEqual(i1, i2) { return i1 === i2; }
;
function arrayEquivalent(arr1, arr2, comparefn) {
    if (arr1.length !== arr2.length)
        return false;
    comparefn = comparefn || strictEqual;
    let len = arr1.length;
    let metarr = new Array(len);
    for (let i = 0; i < len; ++i) {
        let item1 = arr1[i], j = 0;
        for (; j < len; ++j) {
            if (metarr[j])
                continue;
            let item2 = arr2[j];
            if (comparefn(item1, item2))
                break;
        }
        if (j === len)
            return false;
        metarr[j] = true;
    }
    return true;
}
exports.arrayEquivalent = arrayEquivalent;
;
//# sourceMappingURL=index.js.map