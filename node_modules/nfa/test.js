
var State = require('./state.js');
var usage = require('./util.js');
var utility = require('utility');
var todfa = require('./todfa.js');
var dfa = require('dfa');

var idGen = new utility.IdGen();

// var state0 = new State(idGen);
// var state1 = new State(idGen);
// var state2 = new State(idGen);
// var state3 = new State(idGen);
// var state4 = new State(idGen);
// var state5 = new State(idGen);
// var state6 = new State(idGen);
// var state7 = new State(idGen);
// state0.transition('', state1);
// state1.transition('', state2);
// state2.transition('', state3);
// state3.transition('', state4);
// state4.transition('', state6);
// state4.transition('', state5);
// state4.transition('', state1);
// state6.transition('', state1);
// state6.transition('', state7);
// state3.setTerminal(true);

// var states = [state0, state1, state2, state3, state4, state5, state6, state7];

// usage.calcEpsilonClosure(states);
// usage.printEpsilonClosure(states);


// var state0 = new State(idGen);
// var state1 = new State(idGen);
// var state2 = new State(idGen);
// var state3 = new State(idGen);
// var state4 = new State(idGen);
// var state5 = new State(idGen);
// var state6 = new State(idGen);
// state6.setTerminal(true);
// state5.setTerminal(true);
// state0.transition('b', state1);
// state1.transition('a', state1);
// state1.transition('', state2);
// state2.transition('', state3);
// state2.transition('c', state4);
// state4.transition('e', state6);
// state3.transition('d', state5);
// var states = [state0, state1, state2, state3, state4, state5, state6];
// usage.calcEpsilonClosure(states);
// usage.printEpsilonClosure(states);
// console.log(usage.test(state0, 'baaaaaaaaaaaaaaaaaaace'));
// console.log(usage.test(state0, 'baaaaaaaaaaaad'));
// console.log(usage.test(state0, 'bq'));
// console.log(usage.test(state0, 'bc'));

var state0 = new State(idGen);
var state1 = new State(idGen);
var state2 = new State(idGen);
var state3 = new State(idGen);
state3.setTerminal(true);
state0.transition('', state1);
state0.transition('d', state0);
state1.transition('', state2);
state1.transition('a', state1);
state2.transition('b', state2);
state3.transition('c', state3);
state2.transition('', state3);
var states = [state0, state1, state2, state3];
usage.calcEpsilonClosure(states);
usage.printEpsilonClosure(states);
var dfaStart = todfa(state0);
dfa.printTransition(dfaStart);
