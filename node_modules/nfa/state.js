
var utility = require('utility');
var EpsilonClosure = require('./epsilonclosure.js');

var State = function (idGen) {
    this._id = idGen.newId();
    this._tmap = new Map(); //transition map
    this._terminal = false; //is terminal state
    this._epclosure = null;
    this.setEpsilonClosure(new EpsilonClosure());
};
State.prototype.transition = function (ch, state) {
    if(state == null)
        throw new Error('null state is not acceptable');
    if(!utility.isStr(ch) || ch.length > 1) //empty string is epsilon transition
        throw new Error('bad transition character: ' + ch);
    if(this._tmap.has(ch))
        this._tmap.get(ch).add(state);
    else
        this._tmap.set(ch, new Set().add(state));
};
State.prototype.getTransition = function (ch) {
    return this._tmap.get(ch);
};
State.prototype.getAllTransition = function () {
    return [...this._tmap];
};
State.prototype.setTerminal = function (t) {
    this._terminal = Boolean(t);
    return this._terminal;
};
State.prototype.getTerminal = function () {
    return this._terminal;
};
State.prototype.getEpsilonClosure = function () {
    return this._epclosure;
};
State.prototype.setEpsilonClosure = function (c) {
    if(this._epclosure != null)
        this._epclosure.removeOwner(this);
    this._epclosure = c;
    c.addOwner(this);
    return this;
};
State.prototype.getId = function () {
    return this._id;
};

module.exports = State;
