
exports.State = require('./state.js');
exports.test = function (state, str) {
    var i = 0, len = str.length;
    while(state != null && i < str.length) {
        state = state.go(str[i]);
        ++i;
    }
    return state != null && state.terminal(); 
};
exports.printTransition = function (state) {
    if(state == null) return;
    var queue = [state];
    var met = new Set().add(state);
    while(queue.length > 0) {
        var state = queue.shift();
        var trans = state.getAllTransitions();
        var myId = state.getId();
        if(state.terminal())
            console.log(myId + ' is a terminal state');
        for(var t = 0; t < trans.length; ++t) {
            var tpair = trans[t];
            var tstate = tpair[1];
            if(!met.has(tstate)) {
                met.add(tstate);
                queue.push(tstate);
            }
            console.log([myId, ' --', tpair[0], '-> ', tstate.getId()].join(''));
        }
    }
};
